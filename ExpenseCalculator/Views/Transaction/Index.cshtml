@model IEnumerable<ExpenseCalculator.Models.Transaction>
@using GridMvc

@{
    ViewData["Title"] = "Index";
}

<h1>Transactions</h1>

<p>
    <a asp-action="Create" class="text-white btn btn-success">Create New</a>
</p>

<div class="row">
    <div class="col-md-12">
        @await Html.Grid(Model).Columns(columns =>
        {
            columns.Add(x => x.Category!.Title).Titled("Category").SetWidth("20%");
            columns.Add(x => x.Date).Format("{0:dd/MM/yyyy}").SetWidth("10%");
            columns.Add(x => x.Amount).RenderValueAs(x => ((x.Category == null || x.Category.Type == "Expense") ? "- " : "+ ") + x.Amount.ToString("N0")).Css("amount-align").SetWidth("20%");
            columns.Add(x => x.Note).SetWidth("35%");
            columns.Add(x => x.TransactionId).Encoded(false).Sanitized(false).RenderValueAs(x => $"<a class='fa-solid fa-pen-to-square' style='color: #d5d8dd;' href='/Transaction/Edit/{x.TransactionId}'></a> <a class='fa-solid fa-trash' style='color: #d5d8dd;' href='/Transaction/Delete/{x.TransactionId}'></a>").Titled("Actions").SetWidth("15%");
        }).Sortable().WithPaging(5, 2).RenderAsync()
    </div>
</div>